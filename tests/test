-- defined lists
x: x
x (x)

-- undefined lists
there is nothing *(nothing)*

-- adjacent lists
color: mazarine | cochineal
piece: scarf | hat | cloak | coat
a (color) (piece), to keep warm.

-- identification of literals
-- handling of significant whitespace
literals: (x) 1 | (x)(x)   2 xs    | (x)(x)(x) 3 xs, even    -- spaces trail
literals are handled correctly *(literals)*

-- escaping characters (automatically where possible)
-- double dash can be used as an em-dash if there is no space after it
some years ago--never mind how long precisely--having little
a literal with something special: a colon

-- empty list items
blanks: (nothing) | something
catch anything? *(blanks)*

-- recursive defs
lr: x(lr) | x
rr: x | x(rr)
astar: a(astar) | (nothing)
p: \((p)\) | \(\) -- the language of matched parens
x+ (lr)
x+ (rr)
a* (astar)
matched parens: (p)

-- numbers
814
814-455 something something

-- resolutions fix the evaluation
h <- a (color) (piece), to keep warm.
a - (h)
a - (h) -- will be the same as above
-- redefining h may yield a new evaluation
h <- a (color) (piece), to keep warm.
b - (h)
b - (h)

-- resolution goes through nested defs
1: 1 (2) | I (2) | X (2)
2: 2 (3) | II (3) | XX (3)
3: 3 (4) | III (4) | XXX (4)
4: 4 (5) | IV (5) | XXXX (5)
5: 5 | V | XXXXX
seq <- (1)
a - (seq)
a - (seq)
seq <- (1)
b - (seq)
b - (seq)

-- escape characters
this is how you would call a list: \(a\) \nand this goes to a new line

-- line breaks. leading whitespace is not significant
it is sometimes necessary \
        to break long lines

-- indentation. leading whitespace is not significant
  this should not show as indented!     \
  and this is on the same line, but with sig. space \
  after 'indented!'.

-- unicode characters are ignored (not lexed)
Du thé, s'il vous plaît.
