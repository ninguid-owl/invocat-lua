Abstract Syntax
---------------
[A] denotes a list of A.

Statement ::= List
            | Hold
            | Item

List ::= Def name [Item]

Hold ::= Res name [Item]

Item ::= Ref name
       | Lit literal
       | Mix Item Item



Concrete Syntax
---------------
EBNF: {A} denotes 0 or more As.

statement ::= definition
            | resolution
            | item

definition ::= name ':' itemlist

resolution ::= name '<-' itemlist

itemlist ::= item {'|' itemlist}

item ::= literal {item}
       | reference {item}

reference ::= '(' name ')'

literal ::= ink {white literal}

ink ::= name {ink}
      | punct {ink}
      | escape {ink}

escape ::= '\('
         | '\)'
         | '\n'



Lexical Syntax
--------------
Regular expressions.

comment ::= [-][-]\s+.*$
name ::= [\w-_',.?!]+
lparen ::= [(]
rparen ::= [)]
colon ::= \s?[:]
larrow ::= \s?[<][-]
pipe ::= [|]
escape ::= \\[n()]
break ::= \\$
punct ::= \p
white ::= \s
